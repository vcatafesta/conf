#sudo mkdir /etc/nginx/ssl
#sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
#    -keyout /etc/nginx/ssl/key.pem \
#    -out /etc/nginx/ssl/cert.pem

#sudo apt-get install certbot python3-certbot-nginx
#sudo certbot --nginx -d meusite.com -d www.meusite.com

# Subdomínio void.chililinux.com
server {
   listen 80;
   listen [::]:80;
   server_name void.chililinux.com;
   if ($host = void.chililinux.com) {
      #return 301 https://void.chililinux.com:92/vg/void-mirror$request_uri;
      #return 301 https://void.chililinux.com/vg/void-mirror$request_uri;
      return 301 https://$server_name$request_uri;
   }
	return 404; # managed by Certbot
}

# Subdomínio void.chililinux.com
server {
   server_name void.chililinux.com;

   # Configuração do SSL para o subdomínio void.chililinux.com
	listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen 443 ssl; # managed by Certbot
   ssl_certificate /etc/letsencrypt/live/void.chililinux.com/fullchain.pem; # managed by Certbot
   ssl_certificate_key /etc/letsencrypt/live/void.chililinux.com/privkey.pem; # managed by Certbot
   include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

   # Configuração do servidor web para o subdomínio void.chililinux.com
   #location /vg/void-mirror {
   # Configuração do seu site com o root correto para /vg/void-mirror no subdomínio void.chililinux.com HTTPS
   root /vg/void-mirror;
   index index.html index.htm index.xml;
   autoindex on;
   #}
   # Configuração adicional do servidor web, se necessário, para o subdomínio void.chililinux.com HTTPS
   # location / {
   #     # Configuração do seu site com o root correto no subdomínio void.chililinux.com HTTPS
   # }
   location / {
      try_files $uri $uri/ =404;
   }
   location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /\n";
   }
}

# Subdomínio arcolinux.chililinux.com
server {
   listen 80;
   listen [::]:80;
   server_name arcolinux.chililinux.com;
   if ($host = arcolinux.chililinux.com) {
      #return 301 https://arcolinux.chililinux.com:93/vg/arco-mirror/archlinux$request_uri;
      #return 301 https://arcolinux.chililinux.com/vg/arco-mirror/archlinux$request_uri;
      return 301 https://$server_name$request_uri;
      #return 301 https://arcolinux.chililinux.com/vg/arco-mirror/archlinux$request_uri;
   }
	return 404; # managed by Certbot
}

# Subdomínio arcolinux.chililinux.com
server {
   server_name arcolinux.chililinux.com;

   # Configuração do servidor web para o subdomínio arcolinux.chililinux.com
   #location /vg/arco-mirror/archlinux {
   # Configuração do seu site com o root correto para /vg/arco-mirror/archlinux no subdomínio arcolinux.chililinux.com HTTPS
   root /vg/arco-mirror/archlinux;
   index index.html index.htm index.xml;
   autoindex on;
   #}
   # Configuração adicional do servidor web, se necessário, para o subdomínio arcolinux.chililinux.com HTTPS
   # location / {
   #     # Configuração do seu site com o root correto no subdomínio arcolinux.chililinux.com HTTPS
   # }
   location / {
      try_files $uri $uri/ =404;
   }
   location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /\n";
   }
	listen [::]:443 ssl ipv6only=on; # managed by Certbot
	listen 443 ssl; # managed by Certbot
   ssl_certificate /etc/letsencrypt/live/arcolinux.chililinux.com/fullchain.pem; # managed by Certbot
   ssl_certificate_key /etc/letsencrypt/live/arcolinux.chililinux.com/privkey.pem; # managed by Certbot
   include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# Subdomínio localhost
# Subdomínio chilios.chililinux.com
# Subdomínio office.chililinux.com
# Subdomínio chilios.chilios.com.br
# Subdomínio office.chilios.com.br
server {
   listen 80;
   listen [::]:80;
   server_name localhost chilios.chililinux.com office.chililinux.com
   chilios.chilios.com.br office.chilios.com.br;
   types_hash_max_size 4096;

   location / {
      root /github/ChiliOS;
      index index.html index.htm index.php;
      autoindex on;
      try_files $uri $uri/ =404;
   }
   #		include fcgiwrap.conf;
   #		include php_fastcgi.conf;
   location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /\n";
   }
}

# Subdomínio sena.chililinux.com
# Subdomínio sena.chilios.com.br
server {
   listen 80;
   listen [::]:80;
   server_name sena.chilios.com.br
   sena.chililinux.com;

   location / {
      root /home/vcatafesta/var/www/html;
      autoindex on;
      index index.html index.htm index.php;
      include php_fastcgi.conf;
   }
   location ~ \.(cgi|py|sh|pl|lua|rb)$ {
      root /home/vcatafesta/var/www/html;
      autoindex on;
      try_files $uri $uri/ =404;
      rewrite ^/cgi-bin/(.*)\.cgi /$1.cgi break;
      rewrite ^/cgi-bin/(.*)\.sh /$1.sh break;
      rewrite ^/cgi-bin/(.*)\.py /$1.py break;
      rewrite ^/cgi-bin/(.*)\.pl /$1.pl break;
      rewrite ^/cgi-bin/(.*)\.lua /$1.lua break;
      rewrite ^/cgi-bin/(.*)\.rb /$1.rb break;
      include /etc/nginx/fastcgi_params;
      fastcgi_pass unix:/run/fcgiwrap.socket;
      fastcgi_param SCRIPT_FILENAME /home/vcatafesta/var/www/html/vcgi$fastcgi_script_name;
   }

	location /vcgi {
		alias /home/vcatafesta/var/www/html/vcgi/;
		index index.html index.php;
		try_files $uri $uri/ /index.php?$args;
		fastcgi_param SCRIPT_FILENAME $request_filename;
		fastcgi_param QUERY_STRING    $query_string;
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
		include fastcgi_params;
	}
}

# Subdomínio arcolinux.chilios.com.br
server {
   server_name arcolinux.chilios.com.br;

   root /vg/arco-mirror/archlinux/;
   index index.html index.htm index.xml;
   autoindex on;

   location / {
      try_files $uri $uri/ =404;
   }
   location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /\n";
   }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/arcolinux.chilios.com.br/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/arcolinux.chilios.com.br/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# Subdomínio arcolinux.chilios.com.br
server {
    if ($host = arcolinux.chilios.com.br) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

	listen 80;
	listen [::]:80;
   server_name arcolinux.chilios.com.br;
	return 404; # managed by Certbot
}

# Subdomínio void.chilios.com.br
server {
   listen 80;
   listen [::]:80;
   server_name void.chilios.com.br;
   if ($host = void.chilios.com.br) {
      #return 301 https://void.chililinux.com:92/vg/void-mirror$request_uri;
      #return 301 https://void.chililinux.com/vg/void-mirror$request_uri;
      return 301 https://$server_name$request_uri;
   }
   return 404; # managed by Certbot
}

# Subdomínio void.chililinux.com
server {
   server_name void.chilios.com.br;

   # Configuração do SSL para o subdomínio void.chililinux.com
   listen [::]:443 ssl ipv6only=on; # managed by Certbot
   listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/void.chilios.com.br/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/void.chilios.com.br/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

   # Configuração do servidor web para o subdomínio void.chililinux.com
   #location /vg/void-mirror {
   # Configuração do seu site com o root correto para /vg/void-mirror no subdomínio void.chililinux.com HTTPS
   root /vg/void-mirror;
   index index.html index.htm index.xml;
   autoindex on;
   #}
   # Configuração adicional do servidor web, se necessário, para o subdomínio void.chililinux.com HTTPS
   # location / {
   #     # Configuração do seu site com o root correto no subdomínio void.chililinux.com HTTPS
   # }
   location / {
      try_files $uri $uri/ =404;
   }
   location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /\n";
   }
}
